package com.example.dadu.layout_check;

        import android.os.AsyncTask;
        import android.os.Bundle;
        import android.support.v7.app.AppCompatActivity;
        import android.view.View;
        import android.widget.TextView;
        import android.widget.Toast;

        import org.json.JSONArray;
        import org.json.JSONException;
        import org.json.JSONObject;
        import java.io.BufferedReader;
        import java.io.BufferedWriter;
        import java.io.InputStream;
        import java.io.InputStreamReader;
        import java.io.OutputStream;
        import java.io.OutputStreamWriter;
        import java.net.HttpURLConnection;
        import java.net.URL;
        import java.net.URLEncoder;
        import java.text.DateFormat;
        import java.text.SimpleDateFormat;
        import java.util.Calendar;
        import java.util.Date;
        import java.util.Timer;
        import java.util.TimerTask;

public class MainActivity extends AppCompatActivity
{



    @Override
    protected void onCreate(Bundle savedInstanceState)
    {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        updateDisplay();
        //display("http://10.22.55.163/socket.php");



    }


    private void display(final String urlWebService)
    {


        class display extends AsyncTask<Void, Void, String>
        {

            @Override
            protected void onPreExecute() {
                super.onPreExecute();
            }


            @Override
            protected void onPostExecute(String s)
            {
                super.onPostExecute(s);
           if(urlWebService=="http://10.22.55.163/readsensor.php")
           {
               try {
                   loadIntoListView(s);
               } catch (JSONException e) {
                   e.printStackTrace();
               }
           }

                if(urlWebService=="http://10.22.55.163/readactuator.php")
                {
                    try {
                        loadIntoListView1(s);
                    } catch (JSONException e) {
                        e.printStackTrace();
                    }
                }
            }

            @Override
            protected String doInBackground(Void... voids) {
                try {
                    URL url = new URL(urlWebService);
                    HttpURLConnection con = (HttpURLConnection) url.openConnection();
                    StringBuilder sb = new StringBuilder();
                    BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(con.getInputStream()));
                    String json;
                    while ((json = bufferedReader.readLine()) != null) {
                        sb.append(json + "\n");
                    }
                    return sb.toString().trim();
                } catch (Exception e) {
                    return null;
                }
            }
        }

        display show_all = new display();
        show_all.execute();

    }

    private void open_close(final String urlWebService)
    {


        class open_close extends AsyncTask<Void, Void, String>
        {

            @Override
            protected void onPreExecute() {
                super.onPreExecute();
            }



            @Override
            protected String doInBackground(Void... voids)
            {
                String data1 = "1";
                try {
                    URL url = new URL(urlWebService);
                    HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection();
                    httpURLConnection.setRequestMethod("POST");
                    httpURLConnection.setDoOutput(true);
                    OutputStream OS = httpURLConnection.getOutputStream();
                    BufferedWriter bufferedWriter = new BufferedWriter(new OutputStreamWriter(OS, "UTF-8"));
                    String data = URLEncoder.encode("value1", "UTF-8") + "=" + URLEncoder.encode(data1, "UTF-8");//data1 is passed to php as value1
                    bufferedWriter.write(data);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                    OS.close();
                    InputStream IS = httpURLConnection.getInputStream();
                    IS.close();
                    httpURLConnection.disconnect();
                    return "null";

                } catch (Exception e) {
                    return null;
                }
            }
        }

        open_close action = new open_close();
        action.execute();

    }

    private void loadIntoListView(String json) throws JSONException
    {
        TextView lake_well = (TextView)findViewById((R.id.lakewell));
        TextView children_park = (TextView)findViewById((R.id.chpark));
        TextView stuff_club = (TextView)findViewById((R.id.stuffclub));
        TextView rr_sump = (TextView)findViewById((R.id.rrsump));
        JSONArray jsonArray = new JSONArray(json);
        String[] stocks = new String[jsonArray.length()];
        for (int i = 0; i < jsonArray.length(); i++)
        {
            JSONObject obj = jsonArray.getJSONObject(i);
            stocks[i] = obj.getString("value");//db col name

        }
        lake_well.setText(stocks[0]);
        children_park.setText(stocks[1]);
        stuff_club.setText(stocks[2]);
        rr_sump.setText(stocks[3]);


    }
    private void loadIntoListView1(String json) throws JSONException
    {
        TextView remote = (TextView)findViewById((R.id.lr));
        TextView opd_cld = (TextView)findViewById((R.id.oc));
        JSONArray jsonArray = new JSONArray(json);
        String[] stocks = new String[jsonArray.length()];
        for (int i = 0; i < jsonArray.length(); i++)
        {
            JSONObject obj = jsonArray.getJSONObject(i);
            stocks[i] = obj.getString("value");//db col name

        }
        remote.setText(stocks[6]);
        opd_cld.setText(stocks[7]);


    }
    public void open(View v)
    {
        open_close("http://10.22.55.163/open.php");

    }
    public void close(View v)
    {
        open_close("http://10.22.55.163/close.php");

    }

    private void datetime() {

        TextView show_date_time = (TextView)findViewById((R.id.date));
        String currentDateTimeString = DateFormat.getDateTimeInstance().format(new Date());
        show_date_time.setText(currentDateTimeString);

    }


    private void updateDisplay() {
        Timer timer = new Timer();
        timer.schedule(new TimerTask() {

            @Override
            public void run() {
                datetime();
                display("http://10.22.55.163/readsensor.php");
                display("http://10.22.55.163/readactuator.php");
            }

        },0,5000);//Update text every second
    }

}

