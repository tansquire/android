package com.example.dadu.a1st;
import android.os.AsyncTask;
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.view.View;
import android.widget.TextView;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLEncoder;
import java.util.Timer;
import java.util.TimerTask;

public class MainActivity extends AppCompatActivity
{



    @Override
    protected void onCreate(Bundle savedInstanceState)
    {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        updateDisplay();


    }


    private void display(final String urlWebService)
    {


        class display extends AsyncTask<Void, Void, String>
        {

            @Override
            protected void onPreExecute() {
                super.onPreExecute();
            }


            @Override
            protected void onPostExecute(String s) {
                super.onPostExecute(s);

                try {
                    loadIntoListView(s);
                } catch (JSONException e) {
                    e.printStackTrace();
                }
            }

            @Override
            protected String doInBackground(Void... voids) {
                try {
                    URL url = new URL(urlWebService);
                    HttpURLConnection con = (HttpURLConnection) url.openConnection();
                    StringBuilder sb = new StringBuilder();
                    BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(con.getInputStream()));
                    String json;
                    while ((json = bufferedReader.readLine()) != null) {
                        sb.append(json + "\n");
                    }
                    return sb.toString().trim();
                } catch (Exception e) {
                    return null;
                }
            }
        }

        display show_all = new display();
        show_all.execute();

    }

    private void open_close(final String urlWebService)
    {


        class open_close extends AsyncTask<Void, Void, String>
        {

            @Override
            protected void onPreExecute() {
                super.onPreExecute();
            }



            @Override
            protected String doInBackground(Void... voids)
            {
                String data1 = "1";
                try {
                    URL url = new URL(urlWebService);
                    HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection();
                    httpURLConnection.setRequestMethod("POST");
                    httpURLConnection.setDoOutput(true);
                    OutputStream OS = httpURLConnection.getOutputStream();
                    BufferedWriter bufferedWriter = new BufferedWriter(new OutputStreamWriter(OS, "UTF-8"));
                    String data = URLEncoder.encode("value", "UTF-8") + "=" + URLEncoder.encode(data1, "UTF-8");
                    bufferedWriter.write(data);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                    OS.close();
                    InputStream IS = httpURLConnection.getInputStream();
                    IS.close();
                    httpURLConnection.disconnect();
                    return "null";

                } catch (Exception e) {
                    return null;
                }
            }
        }

        open_close action = new open_close();
        action.execute();

    }

    private void loadIntoListView(String json) throws JSONException
    {
        TextView rest = (TextView)findViewById((R.id.id1));
        JSONArray jsonArray = new JSONArray(json);
        String[] stocks = new String[jsonArray.length()];
        for (int i = 0; i < jsonArray.length(); i++)
        {
            JSONObject obj = jsonArray.getJSONObject(i);
            stocks[i] = obj.getString("name")+" "+obj.getString("realname");//db col name

        }
        rest.setText(stocks[1]);


    }
    public void open(View v)
    {
        open_close("http://10.22.55.163/open.php");

    }
    public void close(View v)
    {
        open_close("http://10.22.55.163/close.php");

    }

    private void updateDisplay() {
        Timer timer = new Timer();
        timer.schedule(new TimerTask() {

            @Override
            public void run() {

                display("http://10.22.55.163/socket.php");
            }

        },0,5000);//Update text every second
    }

}

